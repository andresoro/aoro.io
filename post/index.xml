<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on andres orozco</title>
    <link>/post/</link>
    <description>Recent content in Posts on andres orozco</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 20 Sep 2019 14:53:43 -0700</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>lytedb</title>
      <link>/post/lytedb/</link>
      <pubDate>Fri, 20 Sep 2019 14:53:43 -0700</pubDate>
      
      <guid>/post/lytedb/</guid>
      <description>Motivations Behind lytedb I created lytedb to have a simple interface to store, retrieve, and persist Go structs. The idea is to have no friction between saving a struct and returning it from the database. For example, if I want to get a user from my db, it should be this simple:
// add a new user under the key &#39;user-id&#39; lytedb.Add(&amp;quot;user-id&amp;quot;, User{Age: 22, Name: &amp;quot;Andres&amp;quot;}) // our user struct var user User // write value assigned to &#39;user-id&#39; onto our struct lytedb.</description>
    </item>
    
    <item>
      <title>Anatomy of this website</title>
      <link>/post/anatomy-of-this-website/</link>
      <pubDate>Fri, 19 Jul 2019 13:43:52 -0700</pubDate>
      
      <guid>/post/anatomy-of-this-website/</guid>
      <description>This post serves as a description of how this site is built and run. I will try and keep this up to date if any changes are made. The following is a rough guide to how I got this site up üëç.
Hugo + Caddy = üöÄ This basic static site takes advantage of two pieces of technology, Hugo and Caddy. Hugo is a fast, easy to use, extensible static site generator.</description>
    </item>
    
  </channel>
</rss>